/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package rs.fon.np.application.kkfunakoshi.form;

import java.awt.Color;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import  rs.fon.np.application.kkfunakoshi.controller.Controller;
import  rs.fon.np.application.kkfunakoshi.domain.Trainer;
import rs.fon.np.application.kkfunakoshi.validation.ValidationException;
import rs.fon.np.application.kkfunakoshi.validation.Validator;

/**
 * Forma za dodavanje trenera.
 * @author Jelena Repac
 */
public class AddNewTrainerForm extends javax.swing.JDialog {

    /**
     * Konstruktor
     * @param parent forma iz koje je pozvana 
     * @param modal odredjuje da li dijalog treba da bude modalan ili ne 
     */
    public AddNewTrainerForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtLastname = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnAdd = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtRepeatedPassword = new javax.swing.JPasswordField();
        lblRepeatedPass = new javax.swing.JLabel();
        lblRepeatedPass1 = new javax.swing.JLabel();
        txtNameError = new javax.swing.JLabel();
        lblLastnameErro = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Name:");

        jLabel2.setText("Lastname:");

        jLabel3.setText("Username:");

        jLabel4.setText("Password:");

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });

        txtLastname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastnameKeyTyped(evt);
            }
        });

        txtPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtPasswordMouseExited(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel5.setText("Repeat password:");

        txtRepeatedPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtRepeatedPasswordMouseExited(evt);
            }
        });

        lblRepeatedPass.setForeground(new java.awt.Color(255, 0, 0));
        lblRepeatedPass.setText("Password error");

        lblRepeatedPass1.setForeground(new java.awt.Color(255, 0, 0));
        lblRepeatedPass1.setText("Password error");

        txtNameError.setForeground(new java.awt.Color(255, 0, 0));
        txtNameError.setText("Name error");

        lblLastnameErro.setForeground(new java.awt.Color(255, 0, 0));
        lblLastnameErro.setText("Lastname error");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLastnameErro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNameError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLastname)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRepeatedPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtRepeatedPassword)
                            .addComponent(lblRepeatedPass1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(txtNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLastnameErro, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRepeatedPass1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtRepeatedPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRepeatedPass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Obradjuje dogadjaj kada se pritisne dugme Add.
     * Dodaje trenera u bazu.
     * Ukoliko dodje do greske, prikazuje se prozor sa porukom o gresci.
     * @param evt dogadjaj koji pokrece ovu metodu
     * 
     */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            validateForm();
           
            String name= txtName.getText().trim();
            String lastname= txtLastname.getText().trim();
            String username= txtUsername.getText().trim();
            String password= String.copyValueOf(txtPassword.getPassword());

            Trainer trainer= new Trainer();
            trainer.setFirstname(name);
            trainer.setLastname(lastname);
            trainer.setUsername(username);
            trainer.setPassword(password);

            Controller.getInstance().addTrainer(trainer);
            JOptionPane.showMessageDialog(this, "Trainer is added.");
            resetFields();
            
        } catch (ValidationException ex) {
             JOptionPane.showMessageDialog(this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed
    /**
     * Obradjuje dogadjaj kada korisnik misom napusti polje za unos lozinke.
     * Proverava da li je lozinka jednaka prethodno unetoj.
     * @param evt dogadjaj koji pokrece ovu metodu
     * 
     */
    private void txtRepeatedPasswordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRepeatedPasswordMouseExited
        if(!String.copyValueOf(txtPassword.getPassword()).equals(String.copyValueOf(txtRepeatedPassword.getPassword())) 
                || String.copyValueOf(txtRepeatedPassword.getPassword()).equals("")){
            lblRepeatedPass.setText("Passwords doesnt match!");
            lblRepeatedPass.setForeground(Color.red);
        }
        else{
            lblRepeatedPass.setText("Passwords match!");
            lblRepeatedPass.setForeground(Color.GREEN);
        }
    }//GEN-LAST:event_txtRepeatedPasswordMouseExited
    /**
     * Obradjuje dogadjaj kada korisnik misom napusti polje za unos lozinke.
     * Proverava da li lozinka zadovoljava format.
     * @param evt dogadjaj koji pokrece ovu metodu
     * 
     */
    private void txtPasswordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPasswordMouseExited
        if(validatePassword(String.valueOf(txtPassword.getPassword()).trim(), "........(.)*")==false){
            lblRepeatedPass1.setText("Password must contains 8 characters");
        }
        else{
            lblRepeatedPass1.setText(null);
        }
    }//GEN-LAST:event_txtPasswordMouseExited
    /**
     * Obradjuje dogadjaj kada se unosi ime trenera.
     * Ukoliko je duzina imena manja od 2 karaktera, postavlja se poruka o gresci u labelu.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
       if(txtName.getText().length()<2){
            txtNameError.setText("The trainer name must contain at least 2 letters");
        }else{
        txtNameError.setText(null);
        }
    }//GEN-LAST:event_txtNameKeyTyped
    /**
     * Obradjuje dogadjaj kada se unosi prezime trenera.
     * Ukoliko je duzina prezimena manja od 2 karaktera, postavlja se poruka o gresci u labelu.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void txtLastnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastnameKeyTyped
        if(txtLastname.getText().length()<2){
            lblLastnameErro.setText("The trainer lastname must contain at least 2 letters");
        }else{
        lblLastnameErro.setText(null);
        }
    }//GEN-LAST:event_txtLastnameKeyTyped

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblLastnameErro;
    private javax.swing.JLabel lblRepeatedPass;
    private javax.swing.JLabel lblRepeatedPass1;
    private javax.swing.JTextField txtLastname;
    private javax.swing.JTextField txtName;
    private javax.swing.JLabel txtNameError;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtRepeatedPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    /**
     *  
     * Vrsi validaciju korisnickog unosa za informacije o treneru.
     * Koristi Validator klasu za proveru i generisanje odgovarajuce poruke o gresci.
     * 
     * @throws ValidationException Ukoliko postoji neka greška u unosu
     *
     */
    private void validateForm() throws ValidationException {
        Validator.startValidation().validateNotNullOrEmpty(txtName.getText().trim(), "You must insert name.")
                .validateNotNullOrEmpty(txtLastname.getText().trim(), "You must insert lastname.")
                .validateNotNullOrEmpty(txtUsername.getText().trim(), "You must insert username.")
                .validateNotNullOrEmpty(String.valueOf(txtPassword.getPassword()).trim(), "You must insert password")
                .validateFormat(String.valueOf(txtPassword.getPassword()).trim(), "........(.)*", "Password must contains minimum 8 characters.")
                .validateContainsCharacter(txtUsername.getText().trim(), " ", "The username must not contain a blank character.")
                .validateContainsCharacter(String.valueOf(txtPassword.getPassword()).trim(), " ", "The password must not contain a blank character")
                .throwIfInvalide();
    }

    /**
     * Resetuje polja forme.
     */
    private void resetFields() {
        txtLastname.setText(null);
        txtUsername.setText(null);
        txtName.setText(null);
        txtPassword.setText(null);
        txtRepeatedPassword.setText(null);
        lblRepeatedPass.setText(null);
        lblRepeatedPass1.setText(null);
    }

    /**
     * Priprema prikaza forme.
     */
    private void prepareView() {
        lblLastnameErro.setText(null);
        txtNameError.setText(null);
        lblRepeatedPass.setText(null);
        lblRepeatedPass1.setText(null);
    }

    /**
     *  Validacija lozinke
     * @param value lozinka
     * @param format format koji lozinka mora da zadovolji
     * @return
     *  <ul>
     *  	<li>true - ukoliko lozinka odgovara formatu</li>
     *  	<li>false - ukoliko lozinka ne odgovara formatu</li>
     *  </ul>
     */
    public boolean validatePassword(String value, String format) {
        Pattern p = Pattern.compile(format);
        Matcher m = p.matcher(value);
        
        boolean b = m.matches();
        if (value == null || !b) {
            return false;
        }
        return true;
    }
 
}
