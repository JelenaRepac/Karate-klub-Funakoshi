/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rs.fon.np.application.kkfunakoshi.view.form;

import java.awt.Image;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import rs.fon.np.application.kkfunakoshi.client.Client;
import rs.fon.np.application.kkfunakoshi.communication.Communication;
import rs.fon.np.application.kkfunakoshi.controller.ControllerUI;
import rs.fon.np.application.kkfunakoshi.domain.CurrentUser;
import rs.fon.np.application.kkfunakoshi.domain.Trainer;
import rs.fon.np.application.kkfunakoshi.view.form.component.table.MemberTableModel;

/**
 * Predstavlja glavnu formu aplikacije, koja omogucava korisnicima kretanje kroz aplikaciju uz pomoc navigacionog menija.
 * @author Jelena Repac
 */
public class FrmMain extends javax.swing.JFrame {

	/**
	 * Trenutno prijavljeni korisnik na sistem.
	 */
    private Trainer currentUser;
    /**
     * Soket koriscen za komunikaciju sa serverom
     */
    private Socket socket;
    /**
     * Konstruktor, kreiranje nove forme FrmMain
     * @param currentUser trenutno prijavljeni korisnik
     * @param socket soket koriscen za komunikaciju sa serverom
     */
    public FrmMain(final Trainer currentUser,Socket socket) {
        
        initComponents();
        ImageIcon img = new ImageIcon("logoKluba.png");
        lblPhoto.setIcon(img);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        //this.setResizable(false);
        this.setTitle("Karate club Funakoshi");
        this.currentUser=currentUser;
        txtUser.setText(CurrentUser.getCurrentUser().getFirstname()+" "+CurrentUser.getCurrentUser().getLastname());
        txtUser.setEditable(false);
        this.socket=socket;
        
        addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {
            }

            @Override
            public void windowClosing(WindowEvent e) {
                try {
                  int answer=JOptionPane.showConfirmDialog(null, "Do you realy want to logout?");
                    if(answer==0){
                       Communication.getInstance().logout(currentUser);
                       dispose();
                    }
                    try {
                        new Client().connect();
                     } catch (IOException ex) {
                        Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                    }
                   
                } catch (Exception ex) {
                    System.out.println("Can't logout.");
                }
            }

            @Override
            public void windowClosed(WindowEvent e) {
            }

            @Override
            public void windowIconified(WindowEvent e) {
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
            }

            @Override
            public void windowActivated(WindowEvent e) {
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        lblLoggedInUser = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        btnLogout = new javax.swing.JButton();
        lblPhoto = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuMembers = new javax.swing.JMenu();
        jMenuItemAddMember = new javax.swing.JMenuItem();
        jMenuItemViewAllMembers = new javax.swing.JMenuItem();
        jMenuCompetition = new javax.swing.JMenu();
        jMenuItemAddCompetition = new javax.swing.JMenuItem();
        jMenuItemViewAllCompetition = new javax.swing.JMenuItem();
        jMenuTeam = new javax.swing.JMenu();
        jMenuItemAddTeam = new javax.swing.JMenuItem();
        jMenuResult = new javax.swing.JMenu();
        jMenuItemAddResult = new javax.swing.JMenuItem();
        jMenuItemViewResults = new javax.swing.JMenuItem();
        jMenuStatistics = new javax.swing.JMenu();
        jMenuItemShow = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem7.setText("jMenuItem7");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenu5.setText("File");
        jMenuBar2.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar2.add(jMenu6);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(java.awt.Color.darkGray);

        lblLoggedInUser.setText("Logged in user: ");

        txtUser.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnLogout.setText("Log out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jMenuMembers.setText("Members");

        jMenuItemAddMember.setText("Add new member");
        jMenuItemAddMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddMemberActionPerformed(evt);
            }
        });
        jMenuMembers.add(jMenuItemAddMember);

        jMenuItemViewAllMembers.setText("View all members");
        jMenuItemViewAllMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemViewAllMembersActionPerformed(evt);
            }
        });
        jMenuMembers.add(jMenuItemViewAllMembers);

        jMenuBar1.add(jMenuMembers);

        jMenuCompetition.setText("Competition");

        jMenuItemAddCompetition.setText("Add new competition");
        jMenuItemAddCompetition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddCompetitionActionPerformed(evt);
            }
        });
        jMenuCompetition.add(jMenuItemAddCompetition);

        jMenuItemViewAllCompetition.setText("View all competitions");
        jMenuItemViewAllCompetition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemViewAllCompetitionActionPerformed(evt);
            }
        });
        jMenuCompetition.add(jMenuItemViewAllCompetition);

        jMenuBar1.add(jMenuCompetition);

        jMenuTeam.setText("Team");

        jMenuItemAddTeam.setText("Add new team");
        jMenuItemAddTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddTeamActionPerformed(evt);
            }
        });
        jMenuTeam.add(jMenuItemAddTeam);

        jMenuBar1.add(jMenuTeam);

        jMenuResult.setText("Results");

        jMenuItemAddResult.setText("Add result");
        jMenuItemAddResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddResultActionPerformed(evt);
            }
        });
        jMenuResult.add(jMenuItemAddResult);

        jMenuItemViewResults.setText("View results");
        jMenuItemViewResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemViewResultsActionPerformed(evt);
            }
        });
        jMenuResult.add(jMenuItemViewResults);

        jMenuBar1.add(jMenuResult);

        jMenuStatistics.setText("Statistics");

        jMenuItemShow.setText("Show statistics");
        jMenuItemShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemShowActionPerformed(evt);
            }
        });
        jMenuStatistics.add(jMenuItemShow);

        jMenuBar1.add(jMenuStatistics);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLoggedInUser)
                .addGap(18, 18, 18)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 791, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLoggedInUser)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogout))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Obradjuje dogadjaj kada se pritisne na stavku iz menija pod nazivom AddMember.
     * Kreira novu formu FrmMember.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void jMenuItemAddMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddMemberActionPerformed
        try {
            new FrmMember(this, true).setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jMenuItemAddMemberActionPerformed

    /**
     * Obradjuje dogadjaj kada se pritisne na stavku iz menija pod nazivom ViewAllMembers.
     * Kreira novu formu FrmViewMembers.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void jMenuItemViewAllMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemViewAllMembersActionPerformed
        new FrmViewMembers(this, true).setVisible(true);
       
    }//GEN-LAST:event_jMenuItemViewAllMembersActionPerformed
    /**
     * Obradjuje dogadjaj kada se pritisne na stavku iz menija pod nazivom AddCompetition.
     * Kreira novu formu FrmCompetition.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void jMenuItemAddCompetitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddCompetitionActionPerformed
        try {
            new FrmCompetition(this, true).setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemAddCompetitionActionPerformed
    /**
     * Obradjuje dogadjaj kada se pritisne na stavku iz menija pod nazivom ViewAllCompetition.
     * Kreira novu formu FrmViewCompetitions.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void jMenuItemViewAllCompetitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemViewAllCompetitionActionPerformed
       new FrmViewCompetitions(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuItemViewAllCompetitionActionPerformed

    /**
     * Obradjuje dogadjaj kada se pritisne na dugme LogOut.
     * Odjavljuje korsnika sa sistema.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
         int answer=JOptionPane.showConfirmDialog(this, "Do you realy want to logout?");
            if(answer==0){
            try {
                Communication.getInstance().logout(currentUser);

            } catch (Exception e) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, e);
            }
            this.dispose();
            }
            else{
                return;
            }
        try {
            new Client().connect();
         } catch (IOException ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    /**
     * Obradjuje dogadjaj kada se pritisne na stavku iz menija pod nazivom AddTeam.
     * Kreira novu formu FrmTeam.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void jMenuItemAddTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddTeamActionPerformed
        new FrmTeam(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuItemAddTeamActionPerformed

    /**
     * Obradjuje dogadjaj kada se pritisne na stavku iz menija pod nazivom AddResult.
     * Kreira novu formu FrmCompetitionResult.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void jMenuItemAddResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddResultActionPerformed
        new FrmCompetitionResult(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuItemAddResultActionPerformed

    /**
     * Obradjuje dogadjaj kada se pritisne na stavku iz menija pod nazivom ViewResults.
     * Kreira novu formu FrmViewResults.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void jMenuItemViewResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemViewResultsActionPerformed
        new FrmViewResults(null).setVisible(true);
    }//GEN-LAST:event_jMenuItemViewResultsActionPerformed

    /**
     * Obradjuje dogadjaj kada se pritisne na stavku iz menija pod nazivom Statistics.
     * Kreira novu formu FrmStatistics.
     * @param evt dogadjaj koji pokrece ovu metodu
     */
    private void jMenuItemShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemShowActionPerformed
        new FrmStatistics(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuItemShowActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogout;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenu jMenuCompetition;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItemAddCompetition;
    private javax.swing.JMenuItem jMenuItemAddMember;
    private javax.swing.JMenuItem jMenuItemAddResult;
    private javax.swing.JMenuItem jMenuItemAddTeam;
    private javax.swing.JMenuItem jMenuItemShow;
    private javax.swing.JMenuItem jMenuItemViewAllCompetition;
    private javax.swing.JMenuItem jMenuItemViewAllMembers;
    private javax.swing.JMenuItem jMenuItemViewResults;
    private javax.swing.JMenu jMenuMembers;
    private javax.swing.JMenu jMenuResult;
    private javax.swing.JMenu jMenuStatistics;
    private javax.swing.JMenu jMenuTeam;
    private javax.swing.JLabel lblLoggedInUser;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

   
}
