/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package rs.fon.np.application.kkfunakoshi.view.form;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import rs.fon.np.application.kkfunakoshi.controller.ControllerUI;
import rs.fon.np.application.kkfunakoshi.domain.Category;
import rs.fon.np.application.kkfunakoshi.domain.Discipline;
import rs.fon.np.application.kkfunakoshi.domain.Gender;
import rs.fon.np.application.kkfunakoshi.domain.Member;
import rs.fon.np.application.kkfunakoshi.domain.Team;
import rs.fon.np.application.kkfunakoshi.validation.ValidationException;
import rs.fon.np.application.kkfunakoshi.validation.Validator;
import rs.fon.np.application.kkfunakoshi.view.form.component.table.MemberTableModel;
import rs.fon.np.application.kkfunakoshi.view.form.component.table.MemberTableModelSimpler;
import rs.fon.np.application.kkfunakoshi.view.form.component.table.TeamTableModel;

/**
 *
 * @author Jeks
 */
public class FrmTeam extends javax.swing.JDialog {

    /**
     * Creates new form FrmTeam
     */
    public FrmTeam(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtTeamId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbGender = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMembers = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTeam = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbDiscipline = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox<>();
        btnReset = new javax.swing.JButton();
        txtNameTeam = new javax.swing.JTextField();
        lblPhoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Team id:");

        txtTeamId.setEditable(false);
        txtTeamId.setEnabled(false);

        jLabel2.setText("Gender:");

        cbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Team name:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Members"));

        tblMembers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMembers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblMembers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMembersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMembers);

        btnAdd.setText("Add member");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 999, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        btnSave.setText("Save team");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Team"));

        tblTeam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTeam.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tblTeam);

        btnDelete.setText("Delete member");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 999, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jLabel4.setText("Discipline:");

        cbDiscipline.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Category:");

        cbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnReset.setText("Reset search");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblPhoto.setPreferredSize(new java.awt.Dimension(35, 16));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTeamId, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(30, 30, 30)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbDiscipline, 0, 101, Short.MAX_VALUE)
                                .addComponent(txtNameTeam))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(30, 30, 30)
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(37, 37, 37)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(35, 35, 35))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTeamId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtNameTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cbDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnReset))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
            if(btnSearch.isEnabled()==false){
                int selectedRow= tblMembers.getSelectedRow();
                if(selectedRow==-1){
                    JOptionPane.showMessageDialog(this, "You must select a team member!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                Member m= ((MemberTableModelSimpler) tblMembers.getModel()).getMember(selectedRow);
                MemberTableModelSimpler model= (MemberTableModelSimpler) tblTeam.getModel();
                if(model.contains(m)==true){
                    JOptionPane.showMessageDialog(this, "You already inserted "+m.getName()+" in the team", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                tblMembers.clearSelection();
                model.addMember(m);
            }
            else{
                JOptionPane.showMessageDialog(this, "You must search for members first!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            
            
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            Gender gender= (Gender) cbGender.getSelectedItem();
            Category category= (Category) cbCategory.getSelectedItem();
            Discipline discipline= (Discipline) cbDiscipline.getSelectedItem();
            
            String query="WHERE m.gender='"+gender.toString()+"' AND m.discipline='"+discipline.toString()+"' AND m.category='"+category.toString()+"'";
            List<Member> members= ControllerUI.getInstance().getByQuery(query);
            formatTableMember(members);
            if(members.size()!=0){
            JOptionPane.showMessageDialog(this, "The system found members!");
            disableFields();
            }else{
            JOptionPane.showMessageDialog(this, "The system cannot find members!","Error",JOptionPane.ERROR_MESSAGE);
            }
            
            
        } catch (Exception ex) {
           JOptionPane.showMessageDialog(this, "You must select gender, category and discipline!!");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow= tblTeam.getSelectedRow();
            if(selectedRow==-1){
                JOptionPane.showMessageDialog(this, "You must select a member to delete from team!","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
        MemberTableModelSimpler model= (MemberTableModelSimpler) tblTeam.getModel();
        model.deleteMember(selectedRow);
        tblTeam.clearSelection();
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
       
        try {
            validateInput();
            String name= txtNameTeam.getText().trim();
            MemberTableModelSimpler model= (MemberTableModelSimpler) tblTeam.getModel();
            List<Member> members= model.getMembers();
            Team team= new Team();
            team.setName(name);
            team.setMembers(members);
            team.setCategory((Category) cbCategory.getSelectedItem());
            ControllerUI.getInstance().addTeam(team);
            JOptionPane.showMessageDialog(this, "Team "+txtNameTeam.getText()+" is successfully saved!");
            refreshView();
            int answer= JOptionPane.showConfirmDialog(this, "Do you want to save more teams?");
            if(answer!=0){
                this.dispose();
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        cbCategory.setEnabled(true);
        cbDiscipline.setEnabled(true);
        cbGender.setEnabled(true);
        
        MemberTableModelSimpler model= new MemberTableModelSimpler(new ArrayList<Member>());
        tblMembers.setModel(model);
        MemberTableModelSimpler modelT= new  MemberTableModelSimpler(new ArrayList<Member>());
        tblTeam.setModel(modelT);
        
        btnSearch.setEnabled(true);
        
    }//GEN-LAST:event_btnResetActionPerformed

    private void tblMembersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMembersMouseClicked
        if(txtNameTeam.getText().trim()==null){
            JOptionPane.showConfirmDialog(this, "You didn't inserted name of the team!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_tblMembersMouseClicked

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JComboBox<String> cbDiscipline;
    private javax.swing.JComboBox<String> cbGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JTable tblMembers;
    private javax.swing.JTable tblTeam;
    private javax.swing.JTextField txtNameTeam;
    private javax.swing.JTextField txtTeamId;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {
        loadGender();
        loadDiscipline();
        loadCategory();
        formatTableMember(new ArrayList<Member>());
        formatTableTeam(new ArrayList<Member>());
        
        ImageIcon img = new ImageIcon("logoIcon.png");
        lblPhoto.setIcon(img);
    }

    private void loadGender() {
        cbGender.setModel(new DefaultComboBoxModel(Gender.values()));
        cbGender.setSelectedItem(null);
    }
    
    private void loadDiscipline() {
        cbDiscipline.setModel(new DefaultComboBoxModel(Discipline.values()));
        cbDiscipline.setSelectedItem(null);
    }

    private void loadCategory(){
        cbCategory.setModel(new DefaultComboBoxModel(Category.values()));
        cbCategory.setSelectedItem(null);
    }
    
    private void formatTableMember(List<Member> members) {
        MemberTableModelSimpler model= new MemberTableModelSimpler(members);
        tblMembers.setModel(model);
    }

    private void formatTableTeam(List<Member> members) {
        MemberTableModelSimpler model= new MemberTableModelSimpler(members);
        tblTeam.setModel(model);
    }

    private void validateInput() throws ValidationException, Exception {
        MemberTableModelSimpler model= (MemberTableModelSimpler) tblTeam.getModel();
        Validator.startValidation().validateNotNullOrEmpty(txtNameTeam.getText(), "You must insert name for the team!").
                validateNotNull(model.getMembers(), "The list is empty!").throwIfInvalide();
        if(model.getMembers().size()<3){
            throw new Exception("Team must contain minimum 3 members!");
        }
        if(model.getMembers().size()>3){
            throw new Exception("Team must contain maximum 3 members!");
        }
    }

    private void refreshView() {
        txtNameTeam.setText(null);
        MemberTableModelSimpler modelMember= new MemberTableModelSimpler(new ArrayList<Member>());
        tblMembers.setModel(modelMember);
        
        MemberTableModelSimpler modelTeam= new  MemberTableModelSimpler(new ArrayList<Member>());
        tblTeam.setModel(modelTeam);
        
        cbGender.setEnabled(true);
        cbDiscipline.setEnabled(true);
        cbCategory.setEnabled(true);
        btnSearch.setEnabled(true);
        
        cbCategory.setSelectedItem(null);
        cbDiscipline.setSelectedItem(null);
        cbGender.setSelectedItem(null);
        
    }

    private void disableFields() {
        cbGender.setEnabled(false);
        cbDiscipline.setEnabled(false);
        cbCategory.setEnabled(false);
       
        btnSearch.setEnabled(false);
        
    }

    
}
